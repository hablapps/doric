name: "Build & coverage"
description: "Check the code, build, testing & generate project coverage"

runs:
  using: "composite"
  steps:

      # SETUP & CACHE
    - uses: coursier/setup-action@v1.3.0
      with:
        jvm: adopt:8
        apps: sbt scala scalafmt  # https://github.com/coursier/apps

    - uses: coursier/cache-action@v6
      with:
        extraKey: "${{ env.SPARK_VERSION }}"

      # CHECK CODE FORMAT
    - name: Code Format
      id: code_format
      if: contains(env.SCOPE, 'test')
      run: sbt -DsparkVersion=${{ env.SPARK_VERSION }} scalafmtCheckAll
      shell: bash

      # TESTING & COVERAGE
    - name: Test & coverage ðŸ“‹
      id: test_coverage
      if: steps.code_format.conclusion == 'success'
      run: sbt -DsparkVersion=${{ env.SPARK_VERSION }} coverage +core/test coverageAggregate
      shell: bash

    - name: Test Summary
      id: test_summary
      if: ${{ success() && steps.test_coverage.conclusion == 'success' || failure() && steps.test_coverage.conclusion == 'failure' }}
      uses: test-summary/action@v2.0
      with:
        paths: "./core/target/test-reports/**/TEST-*.xml"
        output: "test-summary.md"

    - name: Add 2 GitHub step summary
      if: ${{ (success() || failure()) && steps.test_summary.conclusion == 'success' }}
      shell: bash
      run: cat test-summary.md >> $GITHUB_STEP_SUMMARY

    - name: Add summary link
      id: add_summary_link
      if: ${{ (success() || failure()) && steps.test_summary.conclusion == 'success' }}
      shell: bash
      run: |
        img=$(head -1 test-summary.md | perl -pe 's/(<.*?.>).*/$1/')
        url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "| ${{ env.SPARK_VERSION }} | [${img}](${url}) |" > test-summary-${{ env.SPARK_VERSION }}.md
        cat -e test-summary-${{ env.SPARK_VERSION }}.md

    - name: Upload test summary
      if: ${{ github.event_name == 'pull_request' && ((success() || failure()) && steps.add_summary_link.conclusion == 'success') }}
      uses: actions/upload-artifact@v3
      with:
        name: "test-summary-${{ env.SPARK_VERSION }}.md"
        path: "test-summary-${{ env.SPARK_VERSION }}.md"
        if-no-files-found: error
        retention-days: 1

    - name: Publish coverage to codecov ðŸ“Š
      if: contains(env.SCOPE, 'uploadReport')
      uses: codecov/codecov-action@v3
      with:
        files: ./target/scala-2.12/scoverage-report/scoverage.xml,./target/scala-2.13/scoverage-report/scoverage.xml
        fail_ci_if_error: true
        verbose: false
        flags: 'spark-${{ env.SPARK_VERSION }}.x'

      # CLEAN PROJECT BEFORE CACHE
    - name: Cleaning before cache ðŸš¯
      if: ${{ always() }}
      uses: ./.github/actions/clean_cache
