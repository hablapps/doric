name: PR comment

on:
  workflow_run:
    workflows: [CI]
    types:
      - completed

#permissions:
#  pull-requests: write

jobs:
  create_test_summary_report:
#    if: github.repository == 'hablapps/doric'
    runs-on: ubuntu-latest
    name: Create testing summary comment
    steps:
#      - name: [DEBUG] Dump GitHub context
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: |
#          echo "$GITHUB_CONTEXT"

      - name: Find Comment
#        if: github.event_name == 'pull_request'
#        if: ${{ github.event.workflow_run.conclusion == 'success/failure' }}
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          body-includes: "This is an auto-generated comment"

      - uses: actions/checkout@v3

#      - name: Render template
#        id: template
#        uses: chuhlomin/render-template@v1.4
#        with:
#          template: .github/templates/pr_comment.md
#          vars: |
#            workflow: ${{ github.workflow }}
#            run_url: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
#            attempt: ${{ github.event.workflow_run.run_attempt }}
#            job_name: ${{ github.job }}
      - name: Create summary comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          token: "${{ secrets.GITHUB_TOKEN }}"
          edit-mode: replace
#          body: ${{ steps.template.outputs.result }}
          body: |
            :octocat: This is an auto-generated comment created by:
            
            - workflow: ${{ github.workflow }}
            - job name: ${{ github.job }}
            - run: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - attempt: ${{ github.event.workflow_run.run_attempt }} <!-- ${{ github.run_attempt }} -->
            - previous attempt: (${{ github.event.workflow_run.previous_attempt_url }})
            
            <table>
            <tr>
            <th>Actor</th>
            <th>Triggering actor</th>
            <th>Sender</th>
            </tr>
            <td style="text-align:center">
            <a href="${{ github.event.workflow_run.actor.html_url }}">
            <img src="${{ github.event.workflow_run.actor.avatar_url }}" alt="${{ github.event.workflow_run.actor.login }}" style="width:30px;height:30px;">
            <br>
            ${{ github.event.workflow_run.actor.login }}
            </a>
            </td>
            <td style="text-align:center">
            <a href="${{ github.event.workflow_run.triggering_actor.html_url }}">
            <img src="${{ github.event.workflow_run.triggering_actor.avatar_url }}" alt="${{ github.event.workflow_run.triggering_actor.login }}" style="width:30px;height:30px;">
            <br>
            ${{ github.event.workflow_run.triggering_actor.login }}
            </a>
            </td>
            <td style="text-align:center">
            <a href="${{ github.event.sender.html_url }}">
            <img src="${{ github.event.sender.avatar_url }}" alt="${{ github.event.sender.login }}" style="width:30px;height:30px;">
            <br>
            ${{ github.event.sender.login }}
            </a>
            </td>
            <tr><td colspan="3">
            Triggered by:
            
            - Workflow name: "${{ github.event.workflow_run.name }}" at ${{ github.event.workflow_run.path }}
            - URL: [${{ github.event.workflow_run.html_url }}](${{ github.event.workflow_run.html_url }})
            - on ${{ github.event_name }}:${{ github.event.action }} <!-- ${{ github.event.workflow_run.status }} -->
            </td></tr>
            <tr><td colspan="3">
            Commit:
            
            -	Message: ${{ github.event.workflow_run.head_commit.message }}
            -	ID: ${{ github.event.workflow_run.head_commit.id }} <!-- ${{ github.event.workflow_run.head_sha }} -->
            </td></tr>
            </table>
            
            Test summary report ðŸ“Š

            | Spark version |    testing    |
            |:-------------:|:-------------:|
  update_test_summary_report:
    needs: ["create_test_summary_report"]
    runs-on: ubuntu-latest
    name: Update comment
    steps:
      - name: Download artifact
        uses: marcofaggian/action-download-multiple-artifacts@v3.0.8
        with:
          names: test-summary-*.md
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: ${{ github.event.workflow.id }}
          commit: ${{ github.event.workflow_run.head_commit.id }}
          repo: ${{github.repository}}

      - name: Get summary
        id: summary
        run: echo ::set-output name=summary::$(cat test-summary-*.md)
        shell: bash

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          body-includes: "This is an auto-generated comment"

      - name: Add test results
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          token: "${{ secrets.GITHUB_TOKEN }}"
          edit-mode: append
          body: |
            ${{ steps.summary.outputs.summary }}





#      - name: Find Current Pull Request
#        id: findPr
#        uses: jwalton/gh-find-current-pr@v1.3.0
#        with:
#          state: open
#      - run: echo "Your PR is ${PR}"
#        if: success() && steps.findPr.outputs.number
#        env:
#          PR: ${{ steps.findPr.outputs.pr }}
#      - name: Find Comment
##        if: github.event_name == 'pull_request'
#        uses: peter-evans/find-comment@v2
#        id: fc
#        with:
#          issue-number: ${{ steps.findPr.outputs.pr }}
#          body-includes: Test summary report
#      - name: Create summary comment
#        uses: peter-evans/create-or-update-comment@v2
#        with:
#          comment-id: ${{ steps.fc.outputs.comment-id }}
#          issue-number: ${{ steps.findPr.outputs.pr }}
#          token: "${{ secrets.GITHUB_TOKEN }}"
#          body: |
#            Test summary report ðŸ“Š
#
#            | Spark version |    testing    |
#            |:-------------:|:-------------:|
#          edit-mode: replace





#  - name: "Download artifacts"
##    if: ${{ github.event.workflow_run.conclusion == 'success' }}
##    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
#    runs-on: ubuntu-latest
#    uses: actions/github-script@v6
#    with:
#      script: |
#        let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
#           owner: context.repo.owner,
#           repo: context.repo.repo,
#           run_id: context.payload.workflow_run.id,
#        });
#        let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
#          return artifact.name == "pr_number"
#        })[0];
#        let download = await github.rest.actions.downloadArtifact({
#           owner: context.repo.owner,
#           repo: context.repo.repo,
#           artifact_id: matchArtifact.id,
#           archive_format: 'zip',
#        });
#        let fs = require('fs');
#        fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));
#
#  - name: 'Unzip artifact'
#    run: unzip pr_number.zip
